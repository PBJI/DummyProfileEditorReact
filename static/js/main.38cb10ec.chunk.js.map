{"version":3,"sources":["components/Accordian/Accordian.styled.ts","utility/calculateAge.js","components/Accordian/Accordian.tsx","components/MainPage/MainPage.styled.ts","components/DeleteBox/DeleteBox.styled.ts","components/DeleteBox/DeleteBox.tsx","components/MainPage/MainPage.tsx","App.js","reportWebVitals.js","index.js"],"names":["editable","css","_templateObject","_taggedTemplateLiteral","props","$edits","_templateObject2","AccordianWrapper","styled","div","_templateObject3","HandleWrapper","_templateObject4","$isEditMode","_templateObject5","_templateObject6","SelfieWrapper","_templateObject7","UserName","_templateObject8","rotateHalfCW","keyframes","_templateObject9","rotateHalfACW","_templateObject10","rotateArrowHead","_templateObject11","$doRotation","_templateObject12","_templateObject13","ArrowHeadSvg","svg","_templateObject14","ContentWrapper","_templateObject15","fullWidth","_templateObject16","$takeFullWidth","_templateObject17","_templateObject18","displayOnEdit","_templateObject19","_templateObject20","ItemWrapper","_templateObject21","Label","p","_templateObject22","Content","_templateObject23","DropDown","input","_templateObject24","select","_templateObject25","Item","option","_templateObject26","ButtonWrapper","_templateObject27","Button","img","_templateObject28","Edit","_templateObject29","Save","_templateObject30","Cancel","_templateObject31","Delete","_templateObject32","calculateAge","date","_date$split","split","_date$split2","_slicedToArray","year","month","day","today","Date","_ref","getFullYear","getMonth","getDate","currentMonth","age","Accordian","celeb","requestOpening","key","requestClosing","stateEditMode","activeAccordian","updateCeleb","deleteCeleb","_useState","useState","_useState2","open","setOpen","_useState3","_useState4","editMode","setEditMode","_useState5","_objectSpread","_useState6","details","setDetails","_useState7","_useState8","canSave","setCanSave","description","useRef","name","gender","genderSelect","country","toggleEditMode","dob","alert","id","validateDetails","errorMessage","current","innerText","match","length","Number","isNaN","inneText","_name$current$innerTe","_name$current$innerTe2","first","last","prev","undefined","value","toLowerCase","save","useEffect","React","createElement","onClick","event","target","className","width","height","src","picture","alt","ref","contentEditable","onInput","points","style","fill","stroke","strokeWidth","concat","toUpperCase","Fragment","List","Search","PageCenter","DeleteBoxWrapper","Box","Info","Prompt","Cross","DeleteBox","cancel","MainPage","celebs","setCelebs","loading","setLoading","error","setError","active","setActive","_useState9","_useState10","_useState11","mode","_useState12","deleteMode","setDeleteMode","_useState13","_useState14","searchResults","setSearchResults","search","requestSwitch","handleEditMode","newCeleb","prevCelebs","map","prevCeleb","createAccordianDomList","detailsList","setTimeout","fetch","then","res","text","data","json","JSON","parse","catch","err","console","log","placeholder","regExp","RegExp","trim","replaceAll","results","filter","listSearchResults","App","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","bind","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode"],"mappings":"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","file":"static/js/main.38cb10ec.chunk.js","sourcesContent":["import styled, { keyframes, css } from 'styled-components';\n// Styled components is a library that basically allows attach\n// css to the component directly without declaring them inline or\n// in an external style sheet.\n\n// Creating a component typescript interface for common props\n// To deal with corner cases like rotating the arrow head\n// or giving full width to the description item.\n\ninterface ComponentProps {\n    $doRotation?: boolean;\n    $takeFullWidth?: boolean;\n    $isEditMode?: boolean;\n    $edits?: boolean;\n}\n\n// To help update the ui to edit mode by adding\n// borders to the editable content using css helper func.\nconst editable = css<ComponentProps>`\n${props => {\n        if(props.$edits)\n        {return css`\n            border:1px solid #aaa; \n            border-radius: 10px;\n            padding: 5px 10px;\n            cursor: text;\n            &:hover {\n                border:2px solid #000;\n            }\n            `}\n    }\n}\n`;\n\n\n// Simple styled components with some using props to define\n// css properties and values\nexport const AccordianWrapper : any = styled.div`\nwidth: 500px;\nborder: 1px solid #aaa;\nmargin: 15px;\nborder-radius: 25px;\npadding: 20px 30px;\ndisplay: flex;\nflex-wrap: wrap;\noverflow: hidden;\nuser-select: none;\n`;\n\nexport const HandleWrapper : any = styled.div<ComponentProps>`\nheight: auto;\nflex: 1 0 100%;\ndisplay: flex !important;\nalign-items: center;\nflex-direction: row;\njustify-content: flex-start;\nflex-wrap: nowrap;\n${props => {\n        if(props.$isEditMode){return css`cursor: normal;`}\n        else{return css`cursor: pointer;`}\n    }\n}\n`;\n\n\nexport const SelfieWrapper : any = styled.div`\nwidth: 64px;\nheight: 64px;\nborder: 1px solid #aaa;\nborder-radius: 100%;\noverflow: hidden;\nmargin-right: 20px;\n`;\n\nexport const UserName : any = styled.div<ComponentProps>`\nflex: 1 0;\nfont-size: 28px;\nmargin: 0;\ndisplay:flex;\nalign-self:stretch;\nalign-items:center;\n\n& > p {\n    min-width: 128px;\n    line-height: 64px;\n    margin:0;\n    ${editable}\n    padding: -5px 10px !important;\n}\n`;\n\n\n\n// Prop based css updates.\n\n// Defining the keyframes using keyframes method.\nconst rotateHalfCW = keyframes`\n    from {  transform: rotate(0deg) }\n    to { transform: rotate(180deg)  }\n`;\n\n//Another examples of keyframes method\nconst rotateHalfACW = keyframes`\n    from {  transform: rotate(180deg) }\n    to { transform: rotate(0deg)  }\n`;\n\n\n// Creating a css helper function to interpolate the animation property\n// whose values are dynamically decided based on the passed prop called\n// $doRotation.\nconst rotateArrowHead = css<ComponentProps>`\nanimation : ${props => {\n    if(props.$doRotation) \n    {return css`${rotateHalfCW} 0.2s linear 1 both`} \n    else \n    {return css`${rotateHalfACW} 0.2s linear 1 both`} \n}};\n`;\n\n//Step 3: Finally interpolating css helper function into\n// the ArrowHeadSvg Component.\nexport const ArrowHeadSvg : any = styled.svg<ComponentProps>`\nwidth: 20px;\nheight: 10px;\n${rotateArrowHead}\n`;\n\n// Creating the content components to fill in the details\nexport const ContentWrapper : any = styled.div<ComponentProps>`\nflex: 1 0 100%;\nmargin: 20px 0px;\nheight: auto;\ndisplay: flex;\nflex-direction: row;\nflex-wrap: wrap;\nalign-items: flex-start;\njustify-content: stretch;\n\n& > div > p:nth-child(2) {\n    ${editable}\n}\n\n& > div:nth-child(1){\n    margin-right: 10px;\n}\n& > div:nth-child(3) {\n    margin-left: 10px;\n}\n`;\n\n// Css helper function to filter items that wants to fill in\n// the accordian's width\n\nconst fullWidth = css<ComponentProps>`\n${props => {\n        if(props.$takeFullWidth){return css`flex: 1 0 100%; margin-top: 20px`}\n        else{return css``}    \n    }\n}\n`;\n\nconst displayOnEdit = css<ComponentProps>`\n${props => {\n        if(props.$isEditMode){return css`display: none;`}\n    }\n}\n`;\n\nexport const ItemWrapper : any = styled.div<ComponentProps>`\nflex: 1 0;\ndisplay: flex;\nflex-direction: column;\nalign-items: flex-start;\n${fullWidth}\n`;\n\nexport const Label : any = styled.p`\nfont-size: 20px;\ncolor: #aaa;\nmargin: 0; \n`;\n\nexport const Content : any = styled.p<ComponentProps>`\nfont-size: 20px;\nalign-self:stretch;\nmargin: 0;\nword-wrap: anywhere;\n${displayOnEdit}\n`;\n\nexport const Input : any = styled.input<ComponentProps>`\nbackground: white;\nmargin:2px;\nalign-self:stretch;\nfont-size: 20px;\noutline: none;\nborder: 1px solid #aaa;\nborder-radius: 10px;\npadding: 5px 10px;\ncursor: pointer;\n`;\n\n\nexport const DropDown : any = styled.select<ComponentProps>`\nbackground: white;\nmargin:2px;\nalign-self:stretch;\nfont-size: 20px;\noutline: none;\nborder: 1px solid #aaa;\nborder-radius: 10px;\npadding: 5px 10px;\ncursor: pointer;\n${displayOnEdit}\n`;\n\nexport const Item : any = styled.option`\n`;\n\n\n\n// Creating the buttons\nexport const ButtonWrapper : any = styled.div<ComponentProps>`\ndisplay: flex;\nflex-direction: row;\njustify-content: flex-end;\nflex: 1 0 100%;\n`;\n\n// A clever way to replicate buttons with different names\nexport const Button : any = styled.img<ComponentProps>`\nwidth:28px;\nheight:28px;\nmargin-left:20px;\ncursor: pointer;\n&:hover{\nopacity:0.5;\n}\n`;\n\nexport const Edit : any = styled(Button)``;\nexport const Save : any = styled(Button)``;\nexport const Cancel : any = styled(Button)``;\nexport const Delete : any = styled(Button)``;","\n\nexport function calculateAge(date) {\n    const [year, month, day] = date.split(\"-\");\n    const today = new Date();\n    const [currentYear, currentMonth, currentDay] = \n        [today.getFullYear(), today.getMonth() + 1, today.getDate()];\n    \n    let age = 0;\n    age += currentYear - year - 1;\n    age += currentMonth > month ? 1 :\n        currentMonth === month ? currentDay > day ?\n        1 : 0 : 0;\n    \n    return age;\n}\n\n","import React, { FC, useEffect, useRef, useState } from 'react';\nimport { \n   HandleWrapper, ItemWrapper, ContentWrapper, \n   Label, Content, AccordianWrapper, SelfieWrapper, \n   UserName, ButtonWrapper, Edit, Save, \n   Cancel, Delete, DropDown, Item, ArrowHeadSvg\n} from './Accordian.styled';\nimport { calculateAge } from '../../utility/calculateAge';\n\n\n\n\ninterface AccordianProps {\n   celeb: any,\n   requestOpening: Function,\n   requestClosing: Function,\n   stateEditMode: Function,\n   activeAccordian: number,\n   updateCeleb: Function,\n   deleteCeleb: Function,\n   key: number\n}\n\n\nconst Accordian: FC<AccordianProps> = \n   ({ celeb, key, requestOpening, \n      requestClosing, stateEditMode,\n      activeAccordian, updateCeleb, \n      deleteCeleb}) => {\n\n   // console.log(String(celeb.id) + \"th Accordian rendering...\");\n   const [open, setOpen] = useState<boolean>(false);\n   const [editMode, setEditMode] = useState<boolean>(false);\n   const [details, setDetails] = useState<any>({...celeb});\n   const [canSave, setCanSave] = useState<boolean>(false);\n   \n   // Defining useRefs to bind necessar doms and functions.\n   const description = useRef<any>(null);\n   const age = useRef<any>(null);\n   const name = useRef<any>(null);\n   const gender = useRef<any>(null);\n   const genderSelect = useRef<any>(null);\n   const country = useRef<any>(null);\n\n   // Vulnerable method that requires checks before calling.\n   function toggleAccordian() {\n      if(!open)\n      {\n         if (requestOpening(Number(celeb.id))) {\n            setOpen(true);\n         }\n      }\n      else{\n         if (requestClosing(Number(celeb.id))) {\n            setOpen(false);\n         }\n      }\n   }\n\n   function toggleEditMode(dob: number) {\n      let age = calculateAge(dob);\n      if(age <= 18) {\n         alert(\"Cannot edit non-adult celebs\");\n         return;\n      }\n      if(open && activeAccordian == celeb.id)\n      {\n         // Setting the edit mode locally and as well as\n         // message passing to MainPage of verify\n         if(!editMode) {\n            if (stateEditMode(celeb.id)) {\n               setEditMode(true);\n            }\n         }\n         else {\n            if (stateEditMode(celeb.id)) {\n               setEditMode(false);\n               setCanSave(false);\n            }\n         }\n      }\n   }\n\n   function save() {\n\n      // Pre-processing some user inputs\n      // Splitting first and last of name:\n      let [first, last] = (name.current.innerText).match(/[\\S]+/g);\n      setDetails(\n         (prev:any) => (\n               {...prev, \n                  \"first\": first,\n                  \"last\": last == undefined ? \"\" : last,\n                  \"gender\": (genderSelect.current.value).toLowerCase(),\n                  \"country\": country.current.innerText,\n                  \"age\": Number(age.current.innerText),\n                  \"description\":description.current.innerText\n               }\n            )\n         );\n\n      updateCeleb(details);\n   }\n\n   function validateDetails() {\n      let errorMessage = \"\";\n      //    - validations to be implemented where a user cannot\n         //    -- keep anything empty\n      errorMessage += (name.current.innerText).match(/[\\S]+/g) != null ? \n                        (name.current.innerText).match(/[\\S]+/g).length < 3 ? \"\":\n                        \"\\n Name should only have first and last name words\":\n                        \"\\n You cannot keep the USERNAME field as Empty\";\n\n      errorMessage += (age.current.innerText).match(/[\\S]+/g) != null?\"\":\"\\n You cannot keep the AGE field as Empty\";\n      \n      errorMessage += (country.current.innerText).match(/[\\S]+/g) != null?\"\":\"\\n You cannot keep the COUNTRY field as Empty\";\n     \n      errorMessage += (description.current.innerText).match(/[\\S]+/g) != null?\"\":\"\\n You cannot keep the DESCRIPTION field as Empty\";\n      //    -- input text in the age field\n      errorMessage += !Number.isNaN(age.current.inneText)?\"\":\"\\n You cannot input text in AGE field but only Numbers\";\n      //    -- input numbers in the nationality\n      errorMessage += (country.current.innerText).match(/[\\d]+/g) == null?\"\":\"\\n You cannot input number in COUNTRY field but only Text\";\n\n      if (errorMessage.length > 0) {\n         alert(\"Following validation errors need fixes: \\n\" + errorMessage);\n         return false;\n      }\n      save();\n      toggleEditMode(details.dob);\n      return true;\n   }\n\n   function cancel() {\n      // cancel username updates:\n      name.current.innerText = details.first + \" \"  + details.last;\n      // age:\n      age.current.innerText = `${calculateAge(details.dob)} years`;\n      // gender:\n      gender.current.innerText = (details.gender).toUpperCase();\n      // country and description:\n      description.current.innerText = details.description;\n      country.current.innerText = details.country;\n      toggleEditMode(details.dob);\n   }\n\n   // Listens for other accordians that just became active and accordingly closes if open.\n   useEffect(() => {// Lets this Accordian know that some other accordian opened up.\n      if (open && activeAccordian != celeb.id) {\n         setOpen(false);\n      }\n   }, [activeAccordian]);\n\n   return (\n      <AccordianWrapper>\n\n         {/* Only the handle can toggle the accordian */}\n         <HandleWrapper onClick={(event : any) => {\n            if (event.target.className != \"no-touch\" && !editMode)\n            {toggleAccordian()}}}>\n\n            <SelfieWrapper>\n               <img width=\"64px\" height=\"64px\" \n                  src={details.picture}\n                  alt = \"just a dummy profile picture\"\n               >\n               </img>\n            </SelfieWrapper>\n\n            <UserName $edits={editMode}>\n               <p ref={name} className=\"no-touch\" contentEditable={editMode?\"true\":\"false\"} onInput={() => setCanSave(true)}>\n                  {details.first + \" \"  + details.last}\n               </p>\n            </UserName>\n\n            <ArrowHeadSvg $doRotation={open}>\n               <polyline \n                  points=\"0,0 10,10 20,0\"\n                  style={{fill:\"none\",stroke:\"#aaa\",strokeWidth:\"2\"}}\n               />\n            </ArrowHeadSvg>\n\n         </HandleWrapper>\n\n         { \n            open ? \n            <ContentWrapper $edits={editMode}>\n\n               <ItemWrapper>\n                  <Label>Age</Label>\n                  <Content ref={age} contentEditable={editMode?\"true\":\"false\"} onInput={() => setCanSave(true)}>\n                     {\n                        !editMode\n                        ? ( details.age ? `${details.age} years` : \n                           `${calculateAge(details.dob)} years` \n                          )\n                        : calculateAge(details.dob)\n                     }\n                  </Content>\n               </ItemWrapper>\n\n               <ItemWrapper>\n                  <Label>Gender</Label>\n                  <Content ref={gender} $isEditMode={editMode}>{(details.gender).toUpperCase()}</Content>\n                  <DropDown ref={genderSelect} $isEditMode={!editMode} onInput={() => setCanSave(true)}>\n                     <Item key=\"1\">Male</Item>\n                     <Item key=\"2\">Female</Item>\n                     <Item key=\"3\">Transgender</Item>\n                     <Item key=\"4\">Rather not say</Item>\n                     <Item key=\"5\">Other</Item>\n                  </DropDown>\n               </ItemWrapper>\n\n               <ItemWrapper>\n                  <Label>Country</Label>\n                  <Content ref={country} contentEditable={editMode?\"true\":\"false\"} onInput={() => setCanSave(true)}>\n                     {details.country}\n                  </Content>\n               </ItemWrapper>\n\n               <ItemWrapper $takeFullWidth={true}>\n                  <Label>Description</Label>\n                  <Content ref={description} contentEditable={editMode?\"true\":\"false\"} onInput={() => setCanSave(true)}>\n                     {details.description}\n                  </Content>\n               </ItemWrapper>\n\n            </ContentWrapper>\n         :''\n         }\n         \n         {\n            open ?\n            <ButtonWrapper>\n\n               {\n                  editMode?<>\n                  <Cancel  src=\"./assets/Cancel.svg\" onClick={() => {cancel();}}></Cancel>\n                  \n                  {\n                     canSave \n                     ? <Save src=\"./assets/Save.svg\" onClick={() => {validateDetails();}} ></Save>:''\n\n                  }\n                  </>:<>\n                  <Edit src=\"./assets/Edit.svg\" onClick={() => toggleEditMode(details.dob)} ></Edit>\n               \n                  <Delete src=\"./assets/Delete.svg\" onClick={() => deleteCeleb(Number(details.id))} ></Delete>\n                  </>\n               }\n               \n            </ButtonWrapper>\n            :''\n         }\n\n      </AccordianWrapper>\n   );\n}\n\nexport default Accordian;\n\n","import { css, styled } from \"styled-components\";\n\n\nexport const List = styled.div`\ndisplay: flex;\nflex-direction: column;\nalign-items: center;\n`;\n\nexport const Search = styled.input`\npadding: 10px 30px;\nwidth: 500px;\nline-height: 40px;\nborder-radius: 15px;\nfont-size: 25px;\n`;\n\nexport const PageCenter = styled.div`\ndisplay:flex;\nflex-direction:column;\nalign-items:flext-start;\nflex-wrap:wrap;\nalign-content:center;\n`;","import styled from 'styled-components';\n\nexport const DeleteBoxWrapper = styled.div`\ntop: 0;\nposition: fixed !important;\nheight: 100vh;\nwidth: 100vw;\nbackground: rgba(245,245,245, 0.9);\ndisplay: flex;\nflex-wrap: wrap;\nalign-content: center;\njustify-content: center;\n`;\n\nexport const Box = styled.div`\nborder-radius: 10px;\nwidth: 500px;\nheight: fit-content;\nbackground: white;\nborder: 1px solid #aaa;\npadding: 20px 30px;\n`;\n\nexport const Info = styled.div`\ndisplay: flex;\njustify-content: space-between;\nalign-items: center;\nmargin-bottom: 20px;\n`;\n\nexport const Prompt = styled.p`\nfont-size: 20px;\ndisplay: inline;\nfloat: left;\n`;\n\nexport const Cross = styled.svg`\nheight: 15px;\nwidth: 15px;\nfloat: right;\ndisplay: inline;\ncursor: pointer;\n`;\n\nexport const ButtonWrapper = styled.div`\ndisplay: flex;\njustify-content: flex-end;\n`;\n\nexport const Cancel = styled.div`\nborder-radius: 10px;\nfont-size: 23px;\npadding: 18px 23px;\ncursor: pointer;\nborder: 1px solid #aaa;\n\n&:hover {\n    background: black;\n    color: #aaa;\n}\n`;\n\nexport const Delete = styled.div`\nmargin-left: 20px;\nborder-radius: 10px;\nfont-size: 23px;\npadding: 18px 23px;\nbackground: white;\ncolor: #a52;\ncursor: pointer;\nborder: 1px solid #aaa;\n&:hover {\n    color: white;\nbackground: #a52;\n}\n`;","import React, { FC } from 'react';\nimport { Box, Cross, Delete, DeleteBoxWrapper, Prompt, Cancel, ButtonWrapper, Info } from './DeleteBox.styled';\n\ninterface DeleteBoxProps {\n   deleteCeleb: Function,\n   cancel: Function\n}\n\nconst DeleteBox: FC<DeleteBoxProps> = ({cancel, deleteCeleb}) => {\n \n   return (<DeleteBoxWrapper>\n    <Box>\n      <Info>\n         <Prompt>Do you want to delete this item?</Prompt>\n         <Cross onClick={() => {cancel()}}>\n            <polyline points=\"0,0 15,15\" style={{fill:\"none\",stroke:\"#aaa\",strokeWidth:\"2\"}}/>\n            <polyline points=\"0,15 15,0\" style={{fill:\"none\",stroke:\"#aaa\",strokeWidth:\"2\"}}/>\n         </Cross>\n      </Info>\n      <ButtonWrapper>\n         <Cancel onClick={() => {cancel()}}>Cancel</Cancel>\n         <Delete onClick={() => {deleteCeleb()}}>Delete</Delete>\n      </ButtonWrapper>\n    </Box>\n </DeleteBoxWrapper>)\n};\n\nexport default DeleteBox;\n","import React, { FC, useEffect, useRef, useState } from 'react';\nimport Accordian from '../Accordian/Accordian';\nimport { List, PageCenter, Search } from './MainPage.styled';\nimport DeleteBox from '../DeleteBox/DeleteBox';\n\n\n\ntype Genders = \"male\" | \"female\" | \"transgender\" | \"rather not say\" | \"other\";\ntype CelebDetails = {\n   \"id\": number,\n   \"first\": string,\n   \"last\": string,\n   \"dob\"?: string, // eg. 1970-5-20\n   \"gender\"?: Genders,\n   \"email\"?: string, // eg. someone@email.com\n   \"picture\"?: string, // eg. https://dummy.site/dummy.png\n   \"country\"?: string,\n   \"description\"?: string,\n   \"age\"?: number // Redundant yet useful sometimes.\n}\n\ninterface MainPageProps {}\n\n\nconst MainPage: FC<MainPageProps> = () => {\n    const [celebs, setCelebs] = useState<CelebDetails[]>([]);\n    const [loading, setLoading] = useState<boolean>(true);\n    const [error, setError] = useState<boolean>(false);\n    const [active, setActive] = useState<number | null>(null);\n    const [editMode, setEditMode] = useState<boolean>(false);\n    const [deleteMode, setDeleteMode] = useState<any>({mode:false, id:null});\n    const [searchResults, setSearchResults] = useState<CelebDetails[]>([]);\n\n    const search = useRef<any>(null); // Get current search string\n\n    function requestSwitch(id : number) {\n        if(active == null) { // When no accordian is opened\n            setActive(id);\n            return true; //Accept\n        }\n        else if(active == id && !editMode) { // When a accordian is opened and want to close itself\n            setActive(null);\n            return true //Accept\n        } \n        else if(active != id && !editMode) { // When a accordian wants to open and another one is opened, but not in edit mode\n            setActive(id);\n            return true; //Accept\n        }\n        else if (active != id && editMode) { // When accordian wants to switch but another is in edit mode\n            return false; // Deny\n        }\n    }\n\n    function handleEditMode(id: number) {\n        if (active == id) { // Toggles the global app mode to or from edit mode.\n            if (!editMode) {\n                setEditMode(true);\n            }\n            else {\n                setEditMode(false);\n            }\n            return true\n        }\n        return false\n    }\n\n    function updateCeleb(newCeleb: CelebDetails) {\n        setCelebs((prevCelebs:any) => {\n            return prevCelebs.map((prevCeleb:any) => {\n                if(prevCeleb.id != newCeleb.id){\n                    return prevCeleb;\n                }\n                else {\n                    return newCeleb;\n                }\n            });\n        });\n    }\n\n\n    function confirmDeleteCeleb(id: number) {\n        setCelebs((prevCelebs:any) => {\n            return prevCelebs.filter((prevCeleb:any) => {\n                if(Number(prevCeleb.id) == id){\n                    return false;\n                }\n                else {return true;}\n            });\n        });\n        setSearchResults((prevCelebs:any) => {\n            return prevCelebs.filter((prevCeleb:any) => {\n                if(Number(prevCeleb.id) == id){\n                    return false;\n                }\n                else {return true;}\n            });\n        });\n        setDeleteMode(false);\n    }\n\n    function listSearchResults(name: string) {\n        if(name.length > 0){\n            let regExp = new RegExp(name.toLowerCase().trim().replaceAll(\" \", \"|\"),\"g\");\n            let results = celebs.filter((celeb: any) => {\n                                let fullName = (celeb.first + \" \" + celeb.last).toLowerCase();\n                                return (fullName.match(regExp) != null);\n                            })\n            setSearchResults(results);\n            console.log(regExp);\n            console.log(results);\n        }\n        else {\n            setSearchResults([]);\n            console.log(searchResults);\n        }\n        \n    }\n\n    function createAccordianDomList(detailsList: CelebDetails[]) {\n        return detailsList.map((celeb: any) => {\n            return (\n            <Accordian \n                celeb={celeb}\n                key={Number(celeb.id)+1} \n                requestOpening={requestSwitch} \n                requestClosing={requestSwitch} \n                stateEditMode={handleEditMode} \n                activeAccordian={active != null? active: -1}\n                updateCeleb={updateCeleb}\n                deleteCeleb={ () => { setDeleteMode( {mode:true, id:celeb.id} ) } }\n            />);\n        })\n    }\n\n    useEffect(() => {\n\n        const timer = setTimeout(() => {fetch('./assets/celebrities.json').then(\n                    (res) => {\n                        return res.text();\n                    }\n                ).then(\n                    (data) => {\n                        let json = JSON.parse(data);\n                        setCelebs(json);\n                        setLoading(false);\n                    }\n                ).catch(\n                    (err) => {\n                        console.log(err);\n                        setError(true);\n                        setLoading(false);\n                    }\n                )\n        }, 5000) // Deliberate delay while in production to imitate UX scenario.\n    }, []);\n\n\n    return (\n        <>  \n            <PageCenter>\n                <h1>List View</h1>\n                <Search\n                    ref={search} \n                    placeholder=\"Search List\" \n                    onInput={ () => { listSearchResults( search.current.value ) } }\n                />\n            </PageCenter>\n            <List>\n                {   \n                    error ? <h1>Error in fetching items</h1> :\n                    (loading ? <h1>Loading Details...</h1> :\n                        (\n                            searchResults.length > 0\n                            ? createAccordianDomList(searchResults)\n                            : search.current.value.length == 0 \n                                ? celebs.length > 0\n                                    ? createAccordianDomList(celebs)\n                                    : 'No celeb details to showcase'\n                                : 'No search matched' \n                            \n                        )\n                    )   \n                }\n            </List>\n            {\n                deleteMode.mode  \n                ?   <DeleteBox \n                        cancel={ () => { setDeleteMode( {mode:false, id:null} ) } } \n                        deleteCeleb={ () => { confirmDeleteCeleb( deleteMode.id ) } } \n                    />\n                :''\n            }\n        </>\n    );\n}\n\nexport default MainPage;\n","import './App.css';\nimport MainPage from './components/MainPage/MainPage'\nimport React from 'react';\n\nfunction App() {\n\n  return (\n    <MainPage/>\n  );\n}\n\n\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}